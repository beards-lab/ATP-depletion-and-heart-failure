% simplest 
clear;
saveResults = false;
figure(2);
clf; 
% initialize parameters
params0 = getParams();

% rates
a = 1/3;
b = a;

% load modified parameters - any file generated by 
% ModelParamsInit;   
% ModelOptParamsIterDanLoves
ModelParamsInit2;
ModelParamsInitDanOptim3;
params0.MaxSlackNegativeForce = 0;
% already in ModelParamsInit, but free to overwrite any parameter here
params0.alpha0 = 1.5*25*1;
params0.alpha1 = 80;
% params0.alpha2 = 31.5061; 
% params0.alpha3 = 0;
% params0.alphaRip = 100; %
% params0.dr0 = 0;
% params0.dr1 = 0;
% params0.dr2 = -0.005;
% params0.dr3 = -0.01; %
% params0.gamma = 3.61385;
params0.k1 = 1.7*90; % ratchet rate
params0.k2 = 200; % detach rate
% params0.k_2 = 2.79*b;
params0.k2rip = 0; %

params0.ka = 25; % attach rate
params0.kd = 0.30*4*1.00;
params0.kah = 80;
% params0.kadh = 0;
params0.kSE = 10000;
params0.mu  = 0.001;
% params0.kstiff2 = 27373.9;
params0.dr = 0.02;
params0.kstiff1 = 0.55*1.5e4;
params0.kstiff2 = 0.55*1.5e4;
params0.k_pas = 50;
params0.gamma = 3;

params0.ksr0 = 1.7; % transition out of to SRX
params0.sigma1 = 20;
params0.ksrm = 50; % transition in to SRX
params0.sigma2 = 999999;
% params0.UseTitinInterpolation = false;
params0.alpha2_L = 1/0.038;
params0.k2_R = 3e3;
params0.k2_L = 200;
params0.k2 = 1.25*20;
params0.dr2_R = 0.002;
params0.alpha2_R = 1;
params0.RunForceVelocity = 0;
params0.RunSlack = 1;
params0.RunStairs = 0;
params0.RunForceVelocityTime = 0;
params0.dS = 0.004; % set the space resolution
% params0.gamma = 1;
% params0.k_pas = 10;
ModelParamsInitDanOptim2;
% params0.ksrm = 0;
params0.ksr0 = 1e3;
params0.sigma1 = 1e6;
params0.kstiff1 = 18e3;
params0.kstiff2 = params0.kstiff1;
params0.dr = 0.01;
params0.alpha2_L = 100;
params0.kSE = 50;
params0.ML = 2.0;
% params0.MaxSlackNegativeForce = -5;
params0.justPlotStateTransitionsFlag = false;
rsl0 = 1.024
params0.SL0 = 2.2*rsl0;
% ModelParamsInitDanOptim3;

LoadData; 
tic
RunBakersExp;
toc
%%
saveas(figure(2), 'slack.png')
figure(1); plot(out.t,out.FXBPassive)
figure(3); plot(out.t,out.p2_1./out.p2_0)
out.XB_TORs(end)

%% Store the results
if ~saveResults
    return
end
%% store the results
modNames = getAllDifferent(params0);
writeParamsToMFile('ModelParamsInitDanOptim.m', params0, modNames);

%% fit the slack
modeldatatable = [out.t; out.SL; out.Force]';
zones = [1162, 1209;1464 1519;1816 1889;2269 2359.5;2774 2900];
% zones = [1162, 1209;1464 1519;1816 1889;2269 2359.5];
[dSLpc, ktr, df, del, E, SL, x0lin]  = fitRecovery(modeldatatable, zones, 0);
plot([1 3], [0 0], 'k-')
% times of start of the SL drop
dropstart = velocitytable([3, 7, 11, 15, 19], 1);
% dropstart = velocitytable([3, 7, 11, 15], 1);

dt = x0lin' - dropstart; 
dL = 2.2 - SL;

v = dL'./dt;
%
figure(5);clf;
nexttile;hold on;
plot(modeldatatable(:, 1)-dropstart', modeldatatable(:, 2));
plot([3e-4 dt'], [2.2 SL], '*-', LineWidth=2)
xlim([-0.05, 0.25])
nexttile;
plot(modeldatatable(:, 1)-dropstart', modeldatatable(:, 3));
xlim([-0.05, 0.25])

slack_x = [3e-4 dt'] - 3e-4;
slack_y = [2.2 SL];


%% Show the transition rates
figure(3); clf;
plot(out.t, out.RTD, out.t, out.RD1, out.t, out.R1D, out.t, out.R12, out.t, out.R21, out.t, out.XB_Ripped)
legend('RTD', 'RD1', 'R1D', 'R12', 'R21', 'XB_Ripped')

%% calculate ML at 2.0 um SL
params = params0;
params.ka = 0;
params.ML = 2.0;
% params.kSE = 100;

    params.Velocity = 0;

    params.SL0 = 2.048;
    rsl0 = params.SL0 / 2.0;
    params.Slim_l = 1.85;
    params.Vums = 0;
    % params.Slim_r = 2.2;
    % params.LXBpivot = 2.2;
    % params.dS = 0.0025;
    
if isfield(params, 'PU0')
    params = rmfield(params, 'PU0');
end

% reset the PU0
params = getParams(params, params.g, true);
    
% [F out] = evaluateModel(modelFcn, velocitytable(:, 1), params);
[F out] = evaluateModel(@dPUdTCaSimpleAlternative2State, [0 1], params);

figure(1);clf;
nexttile; plot(out.t, out.SL, out.t, out.LXB)
nexttile; plot(out.t, out.Force, out.t, out.FXB)
